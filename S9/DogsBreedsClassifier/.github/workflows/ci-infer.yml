# name of my workflow
name: InferPipeline

# events 
on:
  # workflow_run:
  #   workflows: ['TrainPipeline']
  #     types:
  #       - completed
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}




# groups set of actions that needs to execute
jobs:
  inference:
    # EC2 Instance
    # runs-on: self-hosted
    runs-on: ubuntu-latest

    env:
      # (or) make sure readS3FullAccess ROLE attached to Runner
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  

    steps:
      # copy code to machine
      - uses: actions/checkout@v4

      - name: install aws-cli
        run: |
          sudo apt install curl unzip -y
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      #  module 'lib' has no attribute 'X509_V_FLAG_NOTIFY_POLICY'
      - name: fix issue
        run: |
          python3 -m pip install pip --upgrade
          pip install pyopenssl --upgrade
          
      # install deps
      - name: Set requirements
        run: pip install -r requirements.txt


      # removing dataset & old confusion-matrcies üåÄüò∂‚Äçüå´Ô∏è
      - name: cleaning existing files ü™•
        run: make trash
      
      # download dataset
      - name: download dataset from s3
        run: dvc pull
        
      # sample model already saved!!
      # confusion matrix saved and printed!!
      - name: running evaluation on already trained-model::Nov-09-2024-3:51AM
        run: |
          make inference


  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=learn-ci
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}