# Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-server-deploy
  namespace: {{ .Values.namespace }}
  labels:
    app: fastapi-server                          # this is used by ONLY Deployment no anywhere else
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi-server
  template:
    metadata:
      labels:
        app: fastapi-server
    spec:
      containers:
      - name: fastapi-server
        image:  "{{ .Values.webServer.image.repository }}:{{ .Values.webServer.image.tag }}" #fastapi-server:latest
        imagePullPolicy: Never
        resources:
          limits:
            memory: "200Mi"
            cpu: "500m"
        ports:
          - containerPort: 80
        env:
          # - name: REDIS_HOST
          #   value: redis-db-service          
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                name: redis-config-{{ .Values.configVersions.redis }}
                key: hostname

          # - name: REDIS_PORT
          #   value: "6379"
          - name: REDIS_PORT
            valueFrom:
              configMapKeyRef:
                name: redis-config-{{ .Values.configVersions.redis }}
                key: port

          # - name: REDIS_PASSWORD
          #   value: aiwilltakeovertheworld
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: redis-secret-{{ .Values.configVersions.redis }}
                key: db_password

          # - name: MODEL_SERVER_URL
          #   value: http://model-server-service
          - name: MODEL_SERVER_URL
            valueFrom:
              configMapKeyRef:
                name: model-server-config-{{ .Values.configVersions.modelServer }}
                key: model_server_url


--- 
# Service

apiVersion: v1
kind: Service
metadata:
  name: fastapi-server-service
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: fastapi-server
  ports:
  - name: httpweb
    port: 80
    targetPort: 80                  # must match containerPort from Deployment 


---

## Ingress
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: fastapi-server-ingress
#   annotations:
#     kubernetes.io/ingress.class: nginx
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: fastapi.localhost
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: fastapi-server-service
#                 port:
#                   number: 80 